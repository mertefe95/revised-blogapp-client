[{"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\index.js":"1","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\App.js":"2","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\utils\\AuthOptions.js":"3","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\utils\\ErrorNotice.js":"4","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\context\\UserContext.js":"5","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\EditPost.js":"6","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\CreatePost.js":"7","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\Post.js":"8","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\AdminLogin.js":"9","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\Login.js":"10","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\Register.js":"11","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\ForgotPassword.js":"12","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\ChangePassword.js":"13","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\UserActivated.js":"14","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Blog.js":"15","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Header.js":"16","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Footer.js":"17","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Sidebar.js":"18","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Main.js":"19","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\MyProfile.js":"20","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\EditProfile.js":"21","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\PostByCategory.js":"22","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\PostList.js":"23"},{"size":149,"mtime":1608107434359,"results":"24","hashOfConfig":"25"},{"size":4099,"mtime":1609180963233,"results":"26","hashOfConfig":"25"},{"size":1593,"mtime":1608899946776,"results":"27","hashOfConfig":"25"},{"size":569,"mtime":1608977371550,"results":"28","hashOfConfig":"25"},{"size":78,"mtime":1608126182077,"results":"29","hashOfConfig":"25"},{"size":2688,"mtime":1608981784837,"results":"30","hashOfConfig":"25"},{"size":4259,"mtime":1609181956087,"results":"31","hashOfConfig":"25"},{"size":2094,"mtime":1608979640834,"results":"32","hashOfConfig":"25"},{"size":2243,"mtime":1609013464629,"results":"33","hashOfConfig":"25"},{"size":2260,"mtime":1608980606813,"results":"34","hashOfConfig":"25"},{"size":4080,"mtime":1608980267683,"results":"35","hashOfConfig":"25"},{"size":2080,"mtime":1608980229850,"results":"36","hashOfConfig":"25"},{"size":2565,"mtime":1608982257163,"results":"37","hashOfConfig":"25"},{"size":1268,"mtime":1608981118557,"results":"38","hashOfConfig":"25"},{"size":2331,"mtime":1609183009308,"results":"39","hashOfConfig":"25"},{"size":2751,"mtime":1609181556288,"results":"40","hashOfConfig":"25"},{"size":1267,"mtime":1608886254168,"results":"41","hashOfConfig":"25"},{"size":1674,"mtime":1609177211334,"results":"42","hashOfConfig":"25"},{"size":213,"mtime":1609181298217,"results":"43","hashOfConfig":"25"},{"size":1869,"mtime":1609013464629,"results":"44","hashOfConfig":"25"},{"size":2931,"mtime":1608981714739,"results":"45","hashOfConfig":"25"},{"size":576,"mtime":1609182175788,"results":"46","hashOfConfig":"25"},{"size":2464,"mtime":1609181505424,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1o6xemr",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\index.js",[],["100","101"],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\App.js",["102"],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\utils\\AuthOptions.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\utils\\ErrorNotice.js",["103"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst ErrorNotice = (props) => {\r\n  \r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\nconst classes = useStyles();\r\nreturn ( \r\n  <div className={classes.root}>\r\n      <Alert severity=\"error\"  ><span>{props.message}</span></Alert>\r\n  </div>\r\n  \r\n)\r\n}\r\n\r\n\r\nexport default ErrorNotice","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\context\\UserContext.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\EditPost.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\CreatePost.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\post-components\\Post.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\AdminLogin.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\Login.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\Register.js",["104"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport ErrorNotice from \"../utils/ErrorNotice\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState();\r\n    const [firstname, setFirstname] = useState();\r\n    const [lastname, setLastName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error, setError] = useState();\r\n    const [noticeMessage, setNoticeMessage] = useState(\"\");\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n\r\n  \r\n    const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        const newUser = { username, email, password, firstname, lastname };\r\n        await Axios.post(\"https://blog-app-revised.herokuapp.com/users/register\", newUser)\r\n        .then(res => setNoticeMessage(res.data.msg))\r\n        .catch(err => {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        })\r\n        } catch (err) {\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }}\r\n    \r\n\r\n    return (\r\n    <div className=\"register-page\">\r\n        <h2>Register</h2>\r\n        <h3 className=\"success-message\">{noticeMessage && <Alert severity=\"success\">{noticeMessage}</Alert>} </h3>\r\n        <h4 className=\"error-message\">\r\n        {error && <Alert severity=\"error\" onClose={() => setError(undefined)}>{error}</Alert>}\r\n        </h4>\r\n\r\n      <form id=\"register-form\" onSubmit={submit} className={classes.root} noValidate autoComplete=\"off\">\r\n      \r\n      <TextField \r\n          label=\"Username\"\r\n          type=\"text\"\r\n          autoComplete=\"current-username\"\r\n          id=\"register-username\"\r\n          onChange={(e) => setUsername(e.target.value)}  \r\n          \r\n        />\r\n        <TextField\r\n        onChange={(e) => setFirstname(e.target.value)}\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"First Name\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        \r\n      />\r\n      <TextField\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        className={classes.margin}\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Last Name\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        \r\n      />\r\n\r\n<TextField \r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          id=\"register-email\"\r\n          onChange={(e) => setEmail(e.target.value)}  \r\n          \r\n        />\r\n<TextField \r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          id=\"register-password\"  \r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n <Button id=\"register-btn\" variant=\"outlined\"  type=\"submit\">\r\n        Submit\r\n    </Button>\r\n\r\n    <ul className=\"register-bottom-ul\">\r\n    <Typography className={classes.root}>\r\n    <li>\r\n    <Link className=\"admin-link\" to=\"/admin-login\">\r\n    Admin Login\r\n    </Link>\r\n    </li>\r\n    <li>\r\n    <Link className=\"forgot-link\" to=\"/forgot-password\" >\r\n    Forgot your password?\r\n    </Link>\r\n    </li>\r\n    </Typography>\r\n    </ul>\r\n\r\n    </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Register;","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\ForgotPassword.js",["105"],"import React, { useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../utils/ErrorNotice\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [noticeMessage, setNoticeMessage] = useState(\"\");\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: '25ch',\r\n          },\r\n      },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = { email } \r\n\r\n    try {\r\n    await Axios.post(\r\n        \"https://blog-app-revised.herokuapp.com/users/forgot-password\", \r\n        user\r\n    ).then(res => setNoticeMessage(res.data.msg))\r\n    .catch(err => {\r\n        err.response.data.msg && setError(err.response.data.msg);\r\n    })\r\n    } catch (err) {\r\n        err.response.data.msg && setError(err.response.data.msg);\r\n    }}\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"forgot-password-page\">\r\n    <h2>Forgot Password</h2>\r\n\r\n    <h4>Please enter your email for password change.</h4>\r\n\r\n    <h4 className=\"error-message\">\r\n            {error && <Alert severity=\"error\" onClose={() => setError(undefined)}>{error}</Alert>} \r\n    </h4>\r\n\r\n    <h3 className=\"success-message\">{noticeMessage && <Alert severity=\"success\">{noticeMessage}</Alert>} </h3>\r\n\r\n    <form id=\"forgot-password-form\" onSubmit={submit} className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n    <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          autoComplete=\"current-email\"\r\n          id=\"register-email\"\r\n          onChange={(e) => setEmail(e.target.value)}  \r\n          \r\n        />\r\n\r\n        \r\n    <Button variant=\"contained\" type=\"submit\">\r\n        Submit\r\n    </Button>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\ChangePassword.js",["106"],"import React, { useState, useEffect }  from \"react\";\r\nimport Axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nconst ChangePassword = ({ match }) => {\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [error, setError] = useState();\r\n  const [forgotToken, setForgotToken] = useState();\r\n  const [noticeMessage, setNoticeMessage] = useState({\r\n    text: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n    try {\r\n      Axios.get(`https://blog-app-revised.herokuapp.com/users/forgot-password/${match.params.forgotToken}`)\r\n      .then(res => [\r\n        setForgotToken(match.params.forgotToken),\r\n        setNoticeMessage({\r\n          text: res.data.msg }),\r\n      ]).catch(err => err.response.data.msg && setError(err.response.data.msg));\r\n        } catch (err) {\r\n          err.response.data.msg && setError(err.response.data.msg);\r\n        }}, []);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          width: '25ch',\r\n        }\r\n      }\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n\r\nconst submit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const changePw = { newPassword, forgotToken };\r\n    await Axios.post(\"https://blog-app-revised.herokuapp.com/users/change-password/\", changePw);\r\n\r\n    setNoticeMessage({\r\n      text: \"Password has changed, please proceed to login.\"\r\n    });\r\n    } catch (err) {\r\n      err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n}\r\n\r\n  return (\r\n    <div className=\"change-password-page\">\r\n        <h2>Change your password!</h2>\r\n        <h3 className=\"success-message\">{noticeMessage.text && <Alert severity=\"success\">{noticeMessage.text}</Alert>} </h3>\r\n        <h4 className=\"error-message\">\r\n        {error && <Alert severity=\"error\" onClose={() => setError(undefined)}>{error}</Alert>} \r\n        </h4>\r\n\r\n        <form id=\"change-password-form\" onSubmit={submit} className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n        <TextField \r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          id=\"register-password\"  \r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"default\" type=\"submit\">\r\n        Submit\r\n        </Button>\r\n  \r\n        </form>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default ChangePassword","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\UserActivated.js",["107"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction UserActivated({ match }) {\r\n\r\n  const [error, setError] = useState();\r\n  const [noticeMessage, setVerifyMessage] = useState({\r\n    text: undefined\r\n});\r\n\r\nuseEffect(() => {\r\n  try {\r\n    Axios.get(`https://blog-app-revised.herokuapp.com/users/activation/${match.params.activationKey}`)\r\n    .then(res => [\r\n      setVerifyMessage({\r\n        text: res.data.msg }),\r\n    ]).catch(err => err.response.data.msg && setError(err.response.data.msg));\r\n    } catch (err) {\r\n        err.response.data.msg && setError(err.response.data.msg);\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div id=\"user-activated-page\">\r\n\r\n    <div id=\"user-activated-div\">\r\n    <h2>User Activation</h2>\r\n    <h4 className=\"error-message\"> {error && <Alert severity=\"error\" onClose={() => setError(undefined)}>{error}</Alert>}  </h4>\r\n\r\n    <h3 className=\"success-message\">{noticeMessage.text && <Alert severity=\"success\">{noticeMessage.text}</Alert>} </h3>\r\n    <h4>{noticeMessage.text ? ( <Link to=\"/login\">Please proceed to Login</Link> ) : (  <> </> ) }</h4> \r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default UserActivated\r\n","C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Blog.js",["108","109"],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Header.js",["110","111"],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Footer.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Sidebar.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\Main.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\MyProfile.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\user-components\\EditProfile.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\PostByCategory.js",[],"C:\\Users\\MERT\\Desktop\\revised-blog-app\\client\\src\\components\\blog-template\\PostList.js",["112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":20,"column":8,"nodeType":"121","messageId":"122","endLine":20,"endColumn":23},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"124","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":27,"column":13,"nodeType":"127","endLine":27,"endColumn":15,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":23,"column":6,"nodeType":"127","endLine":23,"endColumn":8,"suggestions":"130"},{"ruleId":"119","severity":1,"message":"131","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":19},{"ruleId":"119","severity":1,"message":"132","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":12},{"ruleId":"119","severity":1,"message":"133","line":51,"column":20,"nodeType":"121","messageId":"122","endLine":51,"endColumn":31},{"ruleId":"119","severity":1,"message":"134","line":53,"column":9,"nodeType":"121","messageId":"122","endLine":53,"endColumn":19},{"ruleId":"119","severity":1,"message":"135","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"131","line":3,"column":16,"nodeType":"121","messageId":"122","endLine":3,"endColumn":25},{"ruleId":"119","severity":1,"message":"136","line":18,"column":9,"nodeType":"121","messageId":"122","endLine":18,"endColumn":18},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'PostsByCategory' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ErrorNotice' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.forgotToken'. Either include it or remove the dependency array. If 'setForgotToken' needs the current value of 'match.params.forgotToken', you can also switch to useReducer instead of useState and read 'match.params.forgotToken' in the reducer.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'match.params.activationKey'. Either include it or remove the dependency array.",["140"],"'useParams' is defined but never used.","'Post' is defined but never used.","'setCategory' is assigned a value but never used.","'titleClick' is assigned a value but never used.","'useEffect' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [match.params.forgotToken]",{"range":"145","text":"146"},"Update the dependencies array to be: [match.params.activationKey]",{"range":"147","text":"148"},[1027,1029],"[match.params.forgotToken]",[723,725],"[match.params.activationKey]"]